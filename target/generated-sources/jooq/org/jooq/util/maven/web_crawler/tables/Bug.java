/*
 * This file is generated by jOOQ.
*/
package org.jooq.util.maven.web_crawler.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.util.maven.web_crawler.Keys;
import org.jooq.util.maven.web_crawler.Public;
import org.jooq.util.maven.web_crawler.tables.records.BugRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Bug extends TableImpl<BugRecord> {

    private static final long serialVersionUID = -1081843174;

    /**
     * The reference instance of <code>public.bug</code>
     */
    public static final Bug BUG = new Bug();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BugRecord> getRecordType() {
        return BugRecord.class;
    }

    /**
     * The column <code>public.bug.id</code>.
     */
    public final TableField<BugRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('bug_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.bug.type</code>.
     */
    public final TableField<BugRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR.length(80).nullable(false), this, "");

    /**
     * The column <code>public.bug.base_url</code>.
     */
    public final TableField<BugRecord, String> BASE_URL = createField("base_url", org.jooq.impl.SQLDataType.VARCHAR.length(2000).nullable(false), this, "");

    /**
     * The column <code>public.bug.path</code>.
     */
    public final TableField<BugRecord, String> PATH = createField("path", org.jooq.impl.SQLDataType.VARCHAR.length(2000), this, "");

    /**
     * The column <code>public.bug.description</code>.
     */
    public final TableField<BugRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(1000), this, "");

    /**
     * The column <code>public.bug.time_inserted</code>.
     */
    public final TableField<BugRecord, Timestamp> TIME_INSERTED = createField("time_inserted", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>public.bug</code> table reference
     */
    public Bug() {
        this("bug", null);
    }

    /**
     * Create an aliased <code>public.bug</code> table reference
     */
    public Bug(String alias) {
        this(alias, BUG);
    }

    private Bug(String alias, Table<BugRecord> aliased) {
        this(alias, aliased, null);
    }

    private Bug(String alias, Table<BugRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<BugRecord, Integer> getIdentity() {
        return Keys.IDENTITY_BUG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BugRecord> getPrimaryKey() {
        return Keys.BUG_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BugRecord>> getKeys() {
        return Arrays.<UniqueKey<BugRecord>>asList(Keys.BUG_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Bug as(String alias) {
        return new Bug(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Bug rename(String name) {
        return new Bug(name, null);
    }
}
